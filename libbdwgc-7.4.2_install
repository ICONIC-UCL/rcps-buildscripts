#!/usr/bin/env bash

#######################
# libbdwgc, required for Guile
#
# by uccaiki, 2015-07-21

# Remember to set PKG_CONFIG_PATH in the modulefile!

set -e

PACKAGE_NAME="libbdwgc"
PACKAGE_VERSION="7.4.2"

dirname=$(dirname $0 2>/dev/null)
INCLUDES_DIR=${INCLUDES_DIR:-${dirname}/includes}
source ${INCLUDES_DIR}/module_maker_inc.sh
source ${INCLUDES_DIR}/require_inc.sh

require compilers/gnu/4.9.2
require libtool

PACKAGE_DEPS="compilers libtool"

_env_setup() {
  OWD=$(pwd)
  INSTALL_PREFIX=${INSTALL_PREFIX:-/shared/ucl/apps/${PACKAGE_NAME}/${PACKAGE_VERSION}/${COMPILER_TAG}}
  BUILD_DIR=${BUILD_DIR:-$(mktemp -d)}
  MODULE_DIR=${MODULE_DIR:-$(mktemp -d)}
  SRC_URLS="http://www.hboehm.info/gc/gc_source/gc-${PACKAGE_VERSION}.tar.gz \
            http://www.ivmaisoft.com/_bin/atomic_ops/libatomic_ops-${PACKAGE_VERSION}.tar.gz"
}

_fetch_files() {
  cd $BUILD_DIR
  wget $SRC_URLS
  cd $OWD
}

_setup_files() {
  cd $BUILD_DIR
  tar -xf gc-${PACKAGE_VERSION}.tar.gz
  tar -xf libatomic_ops-${PACKAGE_VERSION}.tar.gz
  \mv libatomic_ops-${PACKAGE_VERSION} gc-${PACKAGE_VERSION}/libatomic_ops
  cd $OWD
}

_build() {
  cd $BUILD_DIR
  cd gc-${PACKAGE_VERSION}
  sh ./configure --prefix=$INSTALL_PREFIX --disable-threads #--enable-threads=pthreads
  #  ^-- on some kernels, the `make check` tests with threading reliably hit a bug where futexes get
  #       permanently locked. I'm not sure whether this would happen in use but I
  #       figured it would be annoying enough for us to not want it to happen
  #      See https://bugs.centos.org/view.php?id=8703
  make
  make check
  cd $OWD
}

_install() {
  cd $BUILD_DIR/gc-${PACKAGE_VERSION}
  make install
  cd $OWD
  make_module -p $INSTALL_PREFIX \
              -n "${PACKAGE_NAME}" \
              -c "${PACKAGE_NAME}" \
              -r "gcc-libs/4.9.2" \
              -o $MODULE_DIR/${PACKAGE_NAME}/${PACKAGE_VERSION}/${COMPILER_TAG} \
              -w "Adds libbdwgc (a garbage-collector library) to your environment."
  echo "Module files put in: $MODULE_DIR" >&2
}

_clean_up() {
  if [ -n "$BUILD_DIR" ]; then
    rm -Rf ${BUILD_DIR}
  fi
}

_env_setup
_fetch_files
_setup_files
_build
_install
_clean_up
